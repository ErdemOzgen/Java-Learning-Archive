// Fig. 31.24: EquationGeneratorXMLClientJFrame.java
// Math tutoring program using REST and XML to generate equations.
package com.deitel.equationgeneratorxmlclient;

import javax.swing.JOptionPane;
import javax.xml.bind.JAXB; // utility class for common JAXB operations

public class EquationGeneratorXMLClientJFrame extends javax.swing.JFrame
{
   private String operation = "add"; // operation user is tested on
   private int difficulty = 1; // 1, 2, or 3 digits in each number
   private int answer; // correct answer to the question

   // no-argument constructor
   public EquationGeneratorXMLClientJFrame()
   {
      initComponents();
   } 

   // The initComponents method is autogenerated by NetBeans and is called
   // from the constructor to initialize the GUI. This method is not shown
   // here to save space. Open EquationGeneratorXMLClientJFrame.java in
   // this example's folder to view the complete generated code.
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

        checkAnswerJButton = new javax.swing.JButton();
        generateJButton = new javax.swing.JButton();
        operationJLabel = new javax.swing.JLabel();
        levelJLabel = new javax.swing.JLabel();
        operationJComboBox = new javax.swing.JComboBox();
        levelJComboBox = new javax.swing.JComboBox();
        questionJLabel = new javax.swing.JLabel();
        equationJLabel = new javax.swing.JLabel();
        answerJTextField = new javax.swing.JTextField();
        answerJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        checkAnswerJButton.setText("Check Answer");
        checkAnswerJButton.setEnabled(false);
        checkAnswerJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAnswerJButtonActionPerformed(evt);
            }
        });

        generateJButton.setText("Generate Equation");
        generateJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateJButtonActionPerformed(evt);
            }
        });

        operationJLabel.setText("Choose operation:");

        levelJLabel.setText("Choose level:");

        operationJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Addition", "Subtraction", "Multiplication" }));
        operationJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                operationJComboBoxItemStateChanged(evt);
            }
        });

        levelJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "One-digit numbers", "Two-digit numbers", "Three-digit numbers" }));
        levelJComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                levelJComboBoxItemStateChanged(evt);
            }
        });

        questionJLabel.setText("Question:");

        equationJLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        equationJLabel.setText(" ");

        answerJLabel.setText("Answer:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 234, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkAnswerJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(generateJButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(operationJLabel)
                                .addComponent(levelJLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(operationJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(levelJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(questionJLabel)
                                .addGap(50, 50, 50))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(equationJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(answerJTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(answerJLabel))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 191, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(operationJLabel)
                    .addComponent(operationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(levelJLabel)
                    .addComponent(levelJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generateJButton)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(questionJLabel)
                    .addComponent(answerJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(answerJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(equationJLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkAnswerJButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
   }// </editor-fold>//GEN-END:initComponents

   // determine if the user answered correctly
   private void checkAnswerJButtonActionPerformed(//GEN-FIRST:event_checkAnswerJButtonActionPerformed
      java.awt.event.ActionEvent evt)
   {//GEN-HEADEREND:event_checkAnswerJButtonActionPerformed
      if (answerJTextField.getText().equals(""))
      {
         JOptionPane.showMessageDialog(
            this, "Please enter your answer.");
      } 

      int userAnswer = Integer.parseInt(answerJTextField.getText());

      if (userAnswer == answer)
      {
         equationJLabel.setText(""); // clear label
         answerJTextField.setText(""); // clear text field
         checkAnswerJButton.setEnabled(false);
         JOptionPane.showMessageDialog(this, "Correct! Good Job!",
            "Correct", JOptionPane.PLAIN_MESSAGE);
      } 
      else
      {
         JOptionPane.showMessageDialog(this, "Incorrect. Try again.",
            "Incorrect", JOptionPane.PLAIN_MESSAGE);
      } 
   }//GEN-LAST:event_checkAnswerJButtonActionPerformed

   // retrieve equation from web service and display left side to user
   private void generateJButtonActionPerformed(//GEN-FIRST:event_generateJButtonActionPerformed
      java.awt.event.ActionEvent evt)
   {//GEN-HEADEREND:event_generateJButtonActionPerformed
      try
      {
         String url = String.format("http://localhost:8080/" +
            "EquationGeneratorXML/webresources/equation/%s/%d",
            operation, difficulty);

         // convert XML back to an Equation object
         Equation equation = JAXB.unmarshal(url, Equation.class);

         answer = equation.getResult();
         equationJLabel.setText(equation.getLeftHandSide() + " =");
         checkAnswerJButton.setEnabled(true);
      } 
      catch (Exception exception)
      {
         exception.printStackTrace();
      } 
   }//GEN-LAST:event_generateJButtonActionPerformed

   // obtains the mathematical operation selected by the user
   private void operationJComboBoxItemStateChanged(//GEN-FIRST:event_operationJComboBoxItemStateChanged
      java.awt.event.ItemEvent evt)
   {//GEN-HEADEREND:event_operationJComboBoxItemStateChanged
      String item = (String) operationJComboBox.getSelectedItem();

      if (item.equals("Addition"))
         operation = "add"; // user selected addition
      else if (item.equals("Subtraction"))
         operation = "subtract"; // user selected subtraction
      else
         operation = "multiply"; // user selected multiplication
   }//GEN-LAST:event_operationJComboBoxItemStateChanged

   // obtains the difficulty level selected by the user
   private void levelJComboBoxItemStateChanged(//GEN-FIRST:event_levelJComboBoxItemStateChanged
      java.awt.event.ItemEvent evt)
   {//GEN-HEADEREND:event_levelJComboBoxItemStateChanged
      // indices start at 0, so add 1 to get the difficulty level
      difficulty = levelJComboBox.getSelectedIndex() + 1;
   }//GEN-LAST:event_levelJComboBoxItemStateChanged

   // main method begins execution
   public static void main(String args[])
   {
      java.awt.EventQueue.invokeLater(
         new Runnable()
         {
            public void run()
            {
               new EquationGeneratorXMLClientJFrame().setVisible(true);
            } 
         } 
      ); 
   }

   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JLabel answerJLabel;
   private javax.swing.JTextField answerJTextField;
   private javax.swing.JButton checkAnswerJButton;
   private javax.swing.JLabel equationJLabel;
   private javax.swing.JButton generateJButton;
   private javax.swing.JComboBox levelJComboBox;
   private javax.swing.JLabel levelJLabel;
   private javax.swing.JComboBox operationJComboBox;
   private javax.swing.JLabel operationJLabel;
   private javax.swing.JLabel questionJLabel;
   // End of variables declaration//GEN-END:variables
} 

/**************************************************************************
 * (C) Copyright 1992-2010 by Deitel & Associates, Inc. and               *
 * Pearson Education, Inc. All Rights Reserved.                           *
 *                                                                        *
 * DISCLAIMER: The authors and publisher of this book have used their     *
 * best efforts in preparing the book. These efforts include the          *
 * development, research, and testing of the theories and programs        *
 * to determine their effectiveness. The authors and publisher make       *
 * no warranty of any kind, expressed or implied, with regard to these    *
 * programs or to the documentation contained in these books. The authors *
 * and publisher shall not be liable in any event for incidental or       *
 * consequential damages in connection with, or arising out of, the       *
 * furnishing, performance, or use of these programs.                     *
 *************************************************************************/

